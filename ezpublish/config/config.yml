imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    #- { resource: @SyliusCoreBundle/Resources/config/app/main.yml }

framework:
    esi:             ~
    translator:      { fallback: %locale_fallback% }
    # The secret parameter is used to generate CSRF tokens
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: %kernel.debug%
    form:            ~
    csrf_protection:
        enabled: true
        # Note: changing this will break legacy extensions that rely on the default name to alter AJAX requests
        # See https://jira.ez.no/browse/EZP-20783
        field_name: ezxform_token
    validation:      { enable_annotations: true }
    # Place "eztpl" engine first intentionnally.
    # This is to avoid template name parsing with Twig engine, refusing specific characters
    # which are valid with legacy tpl files.
    templating:      { engines: ['eztpl', 'twig'] } #assets_version: SomeVersionScheme
    trusted_proxies: ~
    trusted_hosts: []
    session:
        save_path: "%kernel.root_dir%/sessions"
        # The session name defined here will be overridden by the one defined in your ezpublish.yml, for your siteaccess.
        # Defaut session name is "eZSESSID{siteaccess_hash}" (unique session name per siteaccess).
        # See ezpublish.yml.example for an example on how to configure this.
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ eZDemoBundle ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

ez_publish_legacy:
    enabled: true
    root_dir: %kernel.root_dir%/../ezpublish_legacy

# Sylius
sylius_api:
    classes:
        api_user:
            model: %sylius.model.user.class%

sylius_core:
    driver: doctrine/orm
    emails:
        enabled: false
    routing:
        %sylius.model.product.class%:
            field: slug
            prefix: /p
            defaults:
                controller: sylius.controller.product:showAction
                repository: sylius.repository.product
                sylius:
                    template: SyliusWebBundle:Frontend/Product:show.html.twig
                    criteria: {slug: $slug}
        %sylius.model.taxon.class%:
            field: permalink
            prefix: /t
            defaults:
                controller: sylius.controller.product:indexByTaxonAction
                repository: sylius.repository.taxon
                sylius:
                    template: SyliusWebBundle:Frontend/Product:indexByTaxon.html.twig

sylius_product:
    driver: doctrine/orm
    classes:
        product:
            model: Sylius\Component\Core\Model\Product
            controller: Sylius\Bundle\CoreBundle\Controller\ProductController
            repository: Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductRepository
            form:
                default: Sylius\Bundle\CoreBundle\Form\Type\ProductType

sylius_resource:
    resources:
        sylius.user:
            driver: doctrine/orm
            classes:
                model: Sylius\Component\Core\Model\User
                controller: Sylius\Bundle\CoreBundle\Controller\UserController
                repository: Sylius\Bundle\CoreBundle\Doctrine\ORM\UserRepository
        sylius.user_oauth:
            driver: doctrine/orm
            classes:
                model: Sylius\Component\Core\Model\UserOAuth
        sylius.group:
            driver: doctrine/orm
            classes:
                model: Sylius\Component\Core\Model\Group
                repository: Sylius\Bundle\CoreBundle\Doctrine\ORM\GroupRepository

sylius_attribute:
    driver: 'doctrine/orm'

sylius_money:
    currency: %sylius.currency%
    locale: %sylius.locale%

sylius_order:
    guest_order: %sylius.order.allow_guest_order%
    classes:
        order:
            model: Sylius\Component\Core\Model\Order
            controller: Sylius\Bundle\CoreBundle\Controller\OrderController
            repository: Sylius\Bundle\CoreBundle\Doctrine\ORM\OrderRepository
            form: Sylius\Bundle\CoreBundle\Form\Type\OrderType
        order_item:
            model: Sylius\Component\Core\Model\OrderItem
            form: Sylius\Bundle\CoreBundle\Form\Type\OrderItemType

sylius_cart:
    resolver: sylius.cart_item_resolver.default
    classes:
        item:
            form: Sylius\Bundle\CoreBundle\Form\Type\CartItemType
        cart:
            form: Sylius\Bundle\CoreBundle\Form\Type\CartType

sylius_addressing:
    scopes:
        shipping: shipping
        content: content
        price: price
    classes:
        address:
            model: Sylius\Component\Core\Model\Address

sylius_taxation:
    classes:
        tax_rate:
            model: Sylius\Component\Core\Model\TaxRate
            form: Sylius\Bundle\CoreBundle\Form\Type\TaxRateType

sylius_promotion:
    classes:
        promotion_subject:
            model: %sylius.model.order.class%
        promotion_coupon:
            model: Sylius\Component\Core\Model\Coupon
            form: Sylius\Bundle\CoreBundle\Form\Type\CouponType

sylius_inventory:
    backorders: %sylius.inventory.backorders_enabled%
    track_inventory: %sylius.inventory.tracking_enabled%
    classes:
        inventory_unit:
            model: Sylius\Component\Core\Model\InventoryUnit
        stockable:
            model: %sylius.model.product_variant.class%

sylius_settings:
    driver: 'doctrine/orm'

sylius_installer:
    classes:
        user:
            model: Sylius\Component\Core\Model\User

sylius_currency:
    driver: 'doctrine/orm'

sylius_locale:
    driver: 'doctrine/orm'

sylius_variation:
    classes:
        product:
            variant:
                model: Sylius\Component\Core\Model\ProductVariant
                repository: Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductVariantRepository
                form: Sylius\Bundle\CoreBundle\Form\Type\ProductVariantType

sylius_shipping:
    classes:
        shipment:
            model: Sylius\Component\Core\Model\Shipment
            repository: Sylius\Bundle\CoreBundle\Doctrine\ORM\ShipmentRepository
        shipment_item:
            model: Sylius\Component\Core\Model\InventoryUnit
        shipping_method:
            model: Sylius\Component\Core\Model\ShippingMethod
            repository: Sylius\Bundle\ResourceBundle\Doctrine\ORM\TranslatableEntityRepository
            form: Sylius\Bundle\CoreBundle\Form\Type\ShippingMethodType
        shipping_method_translation:
            model: Sylius\Component\Core\Model\ShippingMethodTranslation

sylius_payment:
    classes:
        payment:
            model: Sylius\Component\Core\Model\Payment
            controller: Sylius\Bundle\CoreBundle\Controller\PaymentController
    gateways:
        dummy: Test
        stripe: Stripe
        be2bill: Be2Bill
        stripe_checkout: Stripe Checkout
        paypal_express_checkout: Paypal Express Checkout

sylius_taxonomy:
    classes:
        taxonomy:
            model: Sylius\Component\Core\Model\Taxonomy
            repository: Sylius\Bundle\ResourceBundle\Doctrine\ORM\TranslatableEntityRepository
            form: Sylius\Bundle\CoreBundle\Form\Type\TaxonomyType
        taxonomy_translation:
            model: Sylius\Component\Core\Model\TaxonomyTranslation
        taxon:
            model: Sylius\Component\Core\Model\Taxon
            form: Sylius\Bundle\CoreBundle\Form\Type\TaxonType
        taxon_translation:
            model: Sylius\Component\Core\Model\TaxonTranslation

sylius_pricing:
    forms:
        - sylius_product_variant

sylius_content:
    driver: doctrine/phpcr-odm
    classes:
        static_content:
            repository: Sylius\Bundle\ContentBundle\Doctrine\ODM\PHPCR\StaticContentRepository

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.block.service.text: ~

cmf_core:
    publish_workflow: false

cmf_block:
    persistence:
        phpcr:
            block_basepath: /cms/blocks

cmf_content:
    persistence:
        phpcr:
            content_basepath: /cms/pages
    default_template: SyliusWebBundle:Frontend/StaticContent:show.html.twig

cmf_menu:
    persistence:
        phpcr:
            menu_basepath: /cms/menus

cmf_media:
    persistence:
        phpcr:
            media_basepath: /cms/medias
            
cmf_routing:
    chain:
        routers_by_id:
            router.default: 100
            sylius.dynamic_router: 50
            cmf_routing.dynamic_router: 20
    dynamic:
        generic_controller: cmf_content.controller:indexAction
        persistence:
            phpcr:
                enabled: true
                route_basepath: /cms/routes

doctrine_cache:
    providers:
        phpcr_meta: %sylius.cache%
        phpcr_nodes: %sylius.cache%

cmf_create:
    security:
      role: ROLE_SYLIUS_ADMIN
    persistence:
        phpcr:
            image: false

liip_imagine:
    filter_sets:
        slideshow_default:
            data_loader: cmf_media_doctrine_phpcr
            format: jpg
            quality: 90
            filters:
                thumbnail: { size: [850, 300], mode: inset }
        slideshow_small:
            data_loader: cmf_media_doctrine_phpcr
            format: jpg
            quality: 90
            filters:
                thumbnail: { size: [260, 200], mode: inset }
        slideshow_medium:
            data_loader: cmf_media_doctrine_phpcr
            format: jpg
            quality: 90
            filters:
                thumbnail: { size: [850, 300], mode: inset }
        slideshow_large:
            data_loader: cmf_media_doctrine_phpcr
            format: jpg
            quality: 90
            filters:
                thumbnail: { size: [1170, 380], mode: inset }
        image_upload_thumbnail:
            quality: 85
            format: jpg
            data_loader: cmf_media_doctrine_phpcr
            filters:
                thumbnail: { size: [300, 150], mode: inset }


parameters:
